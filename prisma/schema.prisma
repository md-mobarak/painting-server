generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
    // provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id         String    @id @default(uuid())
  //  id        String       @id @default(auto()) @map("_id") @db.ObjectId
  username   String
  email      String    @unique
  password   String
  role       String // 'user', 'admin', 'super admin'
  location   String
  contactNo  String
  profileImg String
  address    String
  reviews    Review[]
  bookings   Booking[]
  cart       CartItem[] // Add a cart relationship

  @@map("user")
}

model Service {
  id          String    @id @default(uuid())
  //  id        String       @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  price       Int
  images      String
  category    String    @default("uncategorized") // Add default value
  available   Boolean
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now())
  bookings    Booking[]
  reviews     Review[]
  cartItems   CartItem[] // Add a cart relationship
  @@map("service")
}


model Review {
  id      String @id @default(uuid())
  //  id        String       @id @default(auto()) @map("_id") @db.ObjectId
  rating  Int
  comment String
  userId    String
  user      User    @relation(fields: [userId], references: [id])
  serviceId String
  service   Service @relation(fields: [serviceId], references: [id])

  @@map("review")
}

model Booking {
  id        String   @id @default(uuid())
  //  id        String       @id @default(auto()) @map("_id") @db.ObjectId
  date      DateTime
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  serviceId String
  service   Service  @relation(fields: [serviceId], references: [id])

  @@map("booking")
}

model Blog {
  id         String   @id @default(uuid())
  //  id        String       @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  img_url   String?
  description String?
}


model CartItem {
  id         String   @id @default(uuid())
  //  id        String       @id @default(auto()) @map("_id") @db.ObjectId
  quantity   Int
  userId     String
  user       User     @relation(fields: [userId], references: [id])
  serviceId  String
  service    Service  @relation(fields: [serviceId], references: [id])

  @@map("cart_item")
}
